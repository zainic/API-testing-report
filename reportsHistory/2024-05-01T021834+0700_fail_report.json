{
  "stats": {
    "suites": 9,
    "tests": 43,
    "passes": 41,
    "pending": 0,
    "failures": 2,
    "start": "2024-04-30T19:17:34.625Z",
    "end": "2024-04-30T19:18:34.958Z",
    "duration": 60333,
    "testsRegistered": 43,
    "passPercent": 95.34883720930233,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d239eb20-1f68-44a6-940a-f91e29e0f9ad",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "abc0e6f6-f666-4296-8722-e6e20cd81682",
          "title": "Circular Array Rotation Function Test",
          "fullFile": "D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotation.spec.js",
          "file": "\\specs\\circularArrayRotation.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8b35becc-94f8-4b93-a8ff-48dc52a6d0fb",
              "title": "Positive Special Cases",
              "fullFile": "D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotation.spec.js",
              "file": "\\specs\\circularArrayRotation.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "F001 - Non-empty array (a), non-empty query, and positive k",
                  "fullTitle": "Circular Array Rotation Function Test Positive Special Cases F001 - Non-empty array (a), non-empty query, and positive k",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotation([1,2,3], 2, [1,2])\nexpect(result).to.deep.equal([3, 1])",
                  "err": {},
                  "uuid": "313df909-a7ff-4e0b-9067-710766de976f",
                  "parentUUID": "8b35becc-94f8-4b93-a8ff-48dc52a6d0fb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F002 - Non-empty array (a), non-empty query, and k is zero",
                  "fullTitle": "Circular Array Rotation Function Test Positive Special Cases F002 - Non-empty array (a), non-empty query, and k is zero",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotation([1,2,3], 0, [1,2])\nexpect(result).to.deep.equal([2, 3])",
                  "err": {},
                  "uuid": "e30ec235-8f8c-4e62-9021-dc50c5b5a011",
                  "parentUUID": "8b35becc-94f8-4b93-a8ff-48dc52a6d0fb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F003 - Empty array (a), empty query, and positive k",
                  "fullTitle": "Circular Array Rotation Function Test Positive Special Cases F003 - Empty array (a), empty query, and positive k",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotation([], 2, [])\nexpect(result).to.deep.equal([])",
                  "err": {},
                  "uuid": "f398147e-027f-4742-a271-45147f08ca26",
                  "parentUUID": "8b35becc-94f8-4b93-a8ff-48dc52a6d0fb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F004 - Non-empty array (a), empty query, and positive k",
                  "fullTitle": "Circular Array Rotation Function Test Positive Special Cases F004 - Non-empty array (a), empty query, and positive k",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotation([1,2,3], 2, [])\nexpect(result).to.deep.equal([])",
                  "err": {},
                  "uuid": "56d5c242-fd99-46e7-8b56-902897d3879d",
                  "parentUUID": "8b35becc-94f8-4b93-a8ff-48dc52a6d0fb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F005 - Non-empty array (a), non-empty query, and k greater than length of a",
                  "fullTitle": "Circular Array Rotation Function Test Positive Special Cases F005 - Non-empty array (a), non-empty query, and k greater than length of a",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotation([1,2,3], 8, [1,2])\nexpect(result).to.deep.equal([3, 1])",
                  "err": {},
                  "uuid": "fa5e0b64-e5e1-4ada-b880-ddbf6520eaea",
                  "parentUUID": "8b35becc-94f8-4b93-a8ff-48dc52a6d0fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "313df909-a7ff-4e0b-9067-710766de976f",
                "e30ec235-8f8c-4e62-9021-dc50c5b5a011",
                "f398147e-027f-4742-a271-45147f08ca26",
                "56d5c242-fd99-46e7-8b56-902897d3879d",
                "fa5e0b64-e5e1-4ada-b880-ddbf6520eaea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "798a298b-d9b0-403e-a10a-31d77942459f",
              "title": "Negative Special Cases",
              "fullFile": "D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotation.spec.js",
              "file": "\\specs\\circularArrayRotation.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "F006 - Empty array (a), non-empty query, and positive k",
                  "fullTitle": "Circular Array Rotation Function Test Negative Special Cases F006 - Empty array (a), non-empty query, and positive k",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotation([], 2, [1,2])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"query must be less than length of a\");",
                  "err": {},
                  "uuid": "75bdfd3b-cdcd-45eb-a415-2f4603218057",
                  "parentUUID": "798a298b-d9b0-403e-a10a-31d77942459f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F007 - Non-empty array (a), non-empty query, and negative k",
                  "fullTitle": "Circular Array Rotation Function Test Negative Special Cases F007 - Non-empty array (a), non-empty query, and negative k",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotation([1,2,3], -2, [])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"k must be non negative\")",
                  "err": {},
                  "uuid": "814d2315-c41b-43da-aaee-303b062013fd",
                  "parentUUID": "798a298b-d9b0-403e-a10a-31d77942459f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F008 - Non-empty query but the element value is greater than length of array a",
                  "fullTitle": "Circular Array Rotation Function Test Negative Special Cases F008 - Non-empty query but the element value is greater than length of array a",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotation([1,2,3], 2, [4])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"query must be less than length of a\")",
                  "err": {},
                  "uuid": "9a4890a4-c0b4-462b-b284-ab746f5cad5b",
                  "parentUUID": "798a298b-d9b0-403e-a10a-31d77942459f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F009 - a and query is not array",
                  "fullTitle": "Circular Array Rotation Function Test Negative Special Cases F009 - a and query is not array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotation(\"[1,2,3]\", 2, 9)\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"input type is not suitable\")",
                  "err": {},
                  "uuid": "229a5c90-1388-42b9-b2bc-a53f08856bde",
                  "parentUUID": "798a298b-d9b0-403e-a10a-31d77942459f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F010 - k is not number",
                  "fullTitle": "Circular Array Rotation Function Test Negative Special Cases F010 - k is not number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotation([1,2,3], \"string\", [1,2])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"input type is not suitable\")",
                  "err": {},
                  "uuid": "98b1087e-12a8-44d3-9713-439a1d80e030",
                  "parentUUID": "798a298b-d9b0-403e-a10a-31d77942459f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F011 - k is not integer",
                  "fullTitle": "Circular Array Rotation Function Test Negative Special Cases F011 - k is not integer",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotation([1,2,3], 2.5, [1,2])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"k must be integer\")",
                  "err": {},
                  "uuid": "f54c315b-a722-444f-bb0e-832a6c7b1daa",
                  "parentUUID": "798a298b-d9b0-403e-a10a-31d77942459f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75bdfd3b-cdcd-45eb-a415-2f4603218057",
                "814d2315-c41b-43da-aaee-303b062013fd",
                "9a4890a4-c0b4-462b-b284-ab746f5cad5b",
                "229a5c90-1388-42b9-b2bc-a53f08856bde",
                "98b1087e-12a8-44d3-9713-439a1d80e030",
                "f54c315b-a722-444f-bb0e-832a6c7b1daa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
              "title": "Performance Test",
              "fullFile": "D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotation.spec.js",
              "file": "\\specs\\circularArrayRotation.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "F012 - Perfomance test number 1",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F012 - Perfomance test number 1",
                  "timedOut": false,
                  "duration": 746,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "c213a6c1-2654-404c-ad22-c37c85a82ca4",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F013 - Perfomance test number 2",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F013 - Perfomance test number 2",
                  "timedOut": false,
                  "duration": 1635,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "de38f659-a2f7-4251-9549-69da700b22ee",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F014 - Perfomance test number 3",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F014 - Perfomance test number 3",
                  "timedOut": false,
                  "duration": 1984,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "fc587cbe-4a6b-4e3c-9b67-b717b60e85d6",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F015 - Perfomance test number 4",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F015 - Perfomance test number 4",
                  "timedOut": false,
                  "duration": 286,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "834c69ae-783a-44c2-ab2d-fd1ab1a794d3",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F016 - Perfomance test number 5",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F016 - Perfomance test number 5",
                  "timedOut": false,
                  "duration": 1969,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "dbe5db65-e5aa-4743-aa54-d4013db2bdcf",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F017 - Perfomance test number 6",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F017 - Perfomance test number 6",
                  "timedOut": false,
                  "duration": 188,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "2fdcdc7d-eb87-4b52-b3b6-46d01aa0c06c",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F018 - Perfomance test number 7",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F018 - Perfomance test number 7",
                  "timedOut": false,
                  "duration": 1964,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "cb72af87-8642-4a06-ae10-61c2c3a22b8e",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F019 - Perfomance test number 8",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F019 - Perfomance test number 8",
                  "timedOut": false,
                  "duration": 1768,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "075c0525-de39-4991-9227-b0369ffa4427",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F020 - Perfomance test number 9",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F020 - Perfomance test number 9",
                  "timedOut": false,
                  "duration": 650,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "1e979e6d-73c1-45ff-9e8a-7da281d93a68",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F021 - Perfomance test number 10",
                  "fullTitle": "Circular Array Rotation Function Test Performance Test F021 - Perfomance test number 10",
                  "timedOut": false,
                  "duration": 3280,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotation([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {},
                  "uuid": "37892840-1443-4e15-a6e9-cab65bab703d",
                  "parentUUID": "cfc5c22b-f7cc-4526-8112-b3e3a58f48de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c213a6c1-2654-404c-ad22-c37c85a82ca4",
                "de38f659-a2f7-4251-9549-69da700b22ee",
                "fc587cbe-4a6b-4e3c-9b67-b717b60e85d6",
                "834c69ae-783a-44c2-ab2d-fd1ab1a794d3",
                "dbe5db65-e5aa-4743-aa54-d4013db2bdcf",
                "2fdcdc7d-eb87-4b52-b3b6-46d01aa0c06c",
                "cb72af87-8642-4a06-ae10-61c2c3a22b8e",
                "075c0525-de39-4991-9227-b0369ffa4427",
                "1e979e6d-73c1-45ff-9e8a-7da281d93a68",
                "37892840-1443-4e15-a6e9-cab65bab703d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14470,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6032148c-5a44-4186-84b3-253b89caa87f",
          "title": "Circular Array Rotation Function Test Longer Version",
          "fullFile": "D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotationTM.spec.js",
          "file": "\\specs\\circularArrayRotationTM.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "46e22460-aaf3-4038-a60f-bed8503a12d6",
              "title": "Positive Special Cases",
              "fullFile": "D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotationTM.spec.js",
              "file": "\\specs\\circularArrayRotationTM.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "G001 - Non-empty array (a), non-empty query, and positive k",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Positive Special Cases G001 - Non-empty array (a), non-empty query, and positive k",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotationTM([1,2,3], 2, [1,2])\nexpect(result).to.deep.equal([3, 1])",
                  "err": {},
                  "uuid": "77dea044-98a1-4227-99fe-8c60ad20381f",
                  "parentUUID": "46e22460-aaf3-4038-a60f-bed8503a12d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G002 - Non-empty array (a), non-empty query, and k is zero",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Positive Special Cases G002 - Non-empty array (a), non-empty query, and k is zero",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotationTM([1,2,3], 0, [1,2])\nexpect(result).to.deep.equal([2, 3])",
                  "err": {},
                  "uuid": "37e0b7b4-80b4-4741-bce4-7a27a4275c78",
                  "parentUUID": "46e22460-aaf3-4038-a60f-bed8503a12d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G003 - Empty array (a), empty query, and positive k",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Positive Special Cases G003 - Empty array (a), empty query, and positive k",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotationTM([], 2, [])\nexpect(result).to.deep.equal([])",
                  "err": {},
                  "uuid": "5d55c1d6-ea8b-4a70-97fb-3876d35a5c87",
                  "parentUUID": "46e22460-aaf3-4038-a60f-bed8503a12d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G004 - Non-empty array (a), empty query, and positive k",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Positive Special Cases G004 - Non-empty array (a), empty query, and positive k",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotationTM([1,2,3], 2, [])\nexpect(result).to.deep.equal([])",
                  "err": {},
                  "uuid": "1e030464-f6b3-4208-877c-ae18513b3edb",
                  "parentUUID": "46e22460-aaf3-4038-a60f-bed8503a12d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G005 - Non-empty array (a), non-empty query, and k greater than length of a",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Positive Special Cases G005 - Non-empty array (a), non-empty query, and k greater than length of a",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "result = await circularArrayRotationTM([1,2,3], 8, [1,2])\nexpect(result).to.deep.equal([3, 1])",
                  "err": {},
                  "uuid": "6c8ae6d1-cfa2-4c7f-97fe-a7c6cd5f1cb4",
                  "parentUUID": "46e22460-aaf3-4038-a60f-bed8503a12d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "77dea044-98a1-4227-99fe-8c60ad20381f",
                "37e0b7b4-80b4-4741-bce4-7a27a4275c78",
                "5d55c1d6-ea8b-4a70-97fb-3876d35a5c87",
                "1e030464-f6b3-4208-877c-ae18513b3edb",
                "6c8ae6d1-cfa2-4c7f-97fe-a7c6cd5f1cb4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d67efc17-a1dd-4526-9483-ea752f7430d1",
              "title": "Negative Special Cases",
              "fullFile": "D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotationTM.spec.js",
              "file": "\\specs\\circularArrayRotationTM.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "G006 - Empty array (a), non-empty query, and positive k",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Negative Special Cases G006 - Empty array (a), non-empty query, and positive k",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotationTM([], 2, [1,2])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"query must be less than length of a\");",
                  "err": {},
                  "uuid": "af579fe2-64f8-46b2-b310-09d43112f6eb",
                  "parentUUID": "d67efc17-a1dd-4526-9483-ea752f7430d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G007 - Non-empty array (a), non-empty query, and negative k",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Negative Special Cases G007 - Non-empty array (a), non-empty query, and negative k",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotationTM([1,2,3], -2, [])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"k must be non negative\")",
                  "err": {},
                  "uuid": "5d16abb3-82cd-4b3a-8f85-131c9d527a41",
                  "parentUUID": "d67efc17-a1dd-4526-9483-ea752f7430d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G008 - Non-empty query but the element value is greater than length of array a",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Negative Special Cases G008 - Non-empty query but the element value is greater than length of array a",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotationTM([1,2,3], 2, [4])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"query must be less than length of a\")",
                  "err": {},
                  "uuid": "2a853951-9e94-40c3-92b4-29932c5fc2cd",
                  "parentUUID": "d67efc17-a1dd-4526-9483-ea752f7430d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G009 - a and query is not array",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Negative Special Cases G009 - a and query is not array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotationTM(\"[1,2,3]\", 2, 9)\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"input type is not suitable\")",
                  "err": {},
                  "uuid": "7e721a43-1f82-4892-917a-ef8a84683514",
                  "parentUUID": "d67efc17-a1dd-4526-9483-ea752f7430d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G010 - k is not number",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Negative Special Cases G010 - k is not number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotationTM([1,2,3], \"string\", [1,2])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"input type is not suitable\")",
                  "err": {},
                  "uuid": "8e7fc8dc-5c2b-4516-bd62-bf328ff80aa5",
                  "parentUUID": "d67efc17-a1dd-4526-9483-ea752f7430d1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "G011 - k is not integer",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Negative Special Cases G011 - k is not integer",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try{\n    result = await circularArrayRotationTM([1,2,3], 2.5, [1,2])\n} catch (err) {\n    result = err\n}\nexpect(result).to.equal(\"k must be integer\")",
                  "err": {},
                  "uuid": "981852ee-97f4-4956-947e-776b8adfb6ee",
                  "parentUUID": "d67efc17-a1dd-4526-9483-ea752f7430d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "af579fe2-64f8-46b2-b310-09d43112f6eb",
                "5d16abb3-82cd-4b3a-8f85-131c9d527a41",
                "2a853951-9e94-40c3-92b4-29932c5fc2cd",
                "7e721a43-1f82-4892-917a-ef8a84683514",
                "8e7fc8dc-5c2b-4516-bd62-bf328ff80aa5",
                "981852ee-97f4-4956-947e-776b8adfb6ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ac18bed1-26dc-4b52-a847-c6daa94bec27",
              "title": "Performance Test",
              "fullFile": "D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotationTM.spec.js",
              "file": "\\specs\\circularArrayRotationTM.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "F012 - Perfomance test number 1",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Performance Test F012 - Perfomance test number 1",
                  "timedOut": false,
                  "duration": 7037,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotationTM([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {
                    "message": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotationTM.spec.js)",
                    "estack": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotationTM.spec.js)",
                    "diff": null
                  },
                  "uuid": "a04c0d52-6a50-4756-871b-5fe6df76b854",
                  "parentUUID": "ac18bed1-26dc-4b52-a847-c6daa94bec27",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "F013 - Perfomance test number 2",
                  "fullTitle": "Circular Array Rotation Function Test Longer Version Performance Test F013 - Perfomance test number 2",
                  "timedOut": false,
                  "duration": 32677,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let actualResult = await circularArrayRotationTM([...aS[i]], kS[i], queryS[i])\nlet expectedResult = await testCircularArrayRotation([...aS[i]], kS[i], queryS[i])\nexpect(actualResult).to.deep.equal(expectedResult)",
                  "err": {
                    "message": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotationTM.spec.js)",
                    "estack": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (D:\\QA Automation\\API-testing-report\\specs\\circularArrayRotationTM.spec.js)",
                    "diff": null
                  },
                  "uuid": "e3023620-4204-4bee-a2db-56612fa173a3",
                  "parentUUID": "ac18bed1-26dc-4b52-a847-c6daa94bec27",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "a04c0d52-6a50-4756-871b-5fe6df76b854",
                "e3023620-4204-4bee-a2db-56612fa173a3"
              ],
              "pending": [],
              "skipped": [],
              "duration": 39714,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "141bf414-407e-4a73-b165-41bd9c6207ad",
          "title": "Posts Testing Schemas",
          "fullFile": "D:\\QA Automation\\API-testing-report\\specs\\posts.spec.js",
          "file": "\\specs\\posts.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "PS001 - Posts Get All Schema Test",
              "fullTitle": "Posts Testing Schemas PS001 - Posts Get All Schema Test",
              "timedOut": false,
              "duration": 724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "res = await request.get('/posts')\nexpect(res.body).to.be.jsonSchema(postsSchemas.postGetAllSchema)",
              "err": {},
              "uuid": "46ed355b-72ee-4813-8e00-54d14d214e02",
              "parentUUID": "141bf414-407e-4a73-b165-41bd9c6207ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PS002 - Posts Get Single Schema Test",
              "fullTitle": "Posts Testing Schemas PS002 - Posts Get Single Schema Test",
              "timedOut": false,
              "duration": 570,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "res = await request.get('/posts/1')\nexpect(res.body).to.be.jsonSchema(postsSchemas.postSchema)",
              "err": {},
              "uuid": "b0655981-944a-4b68-92c4-0fb344d1c150",
              "parentUUID": "141bf414-407e-4a73-b165-41bd9c6207ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PS003 - Posts Limit and Skip Schema Test",
              "fullTitle": "Posts Testing Schemas PS003 - Posts Limit and Skip Schema Test",
              "timedOut": false,
              "duration": 577,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "res = await request.get('/posts?limit=10&skip=10&select=title,reactions,userId')\nexpect(res.body).to.be.jsonSchema(postsSchemas.postLimitAndSkipSchema)",
              "err": {},
              "uuid": "f22d4fe9-43a1-4850-b764-c57f098c9229",
              "parentUUID": "141bf414-407e-4a73-b165-41bd9c6207ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PS004 - Posts All By Attribute Schema Test",
              "fullTitle": "Posts Testing Schemas PS004 - Posts All By Attribute Schema Test",
              "timedOut": false,
              "duration": 571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "res = await request.get('/posts/user/5')\nexpect(res.body).to.be.jsonSchema(postsSchemas.postAllByAttributeSchema)\nfor (let user of res.body.posts) {\n    expect(user.userId).to.equal(5)\n}",
              "err": {},
              "uuid": "9db31260-e1f4-4564-96e2-40471545cdf5",
              "parentUUID": "141bf414-407e-4a73-b165-41bd9c6207ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PS005 - Posts Search Schema Test",
              "fullTitle": "Posts Testing Schemas PS005 - Posts Search Schema Test",
              "timedOut": false,
              "duration": 1370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/posts/search?q=love')\nexpect(res.body).to.be.jsonSchema(postsSchemas.postSearchSchema)",
              "err": {},
              "uuid": "8547d1aa-d8b8-4075-bc49-e5096f8216d0",
              "parentUUID": "141bf414-407e-4a73-b165-41bd9c6207ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PS006 - Posts New Post Schema Test",
              "fullTitle": "Posts Testing Schemas PS006 - Posts New Post Schema Test",
              "timedOut": false,
              "duration": 574,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newPost = {\n    id: 3,\n    title: 'Testing',\n    userId: 4\n}\nconst res = await request.post('/posts/add').send(newPost)\nexpect(res.body).to.be.jsonSchema(postsSchemas.postNewPostSchema)",
              "err": {},
              "uuid": "f364557f-0144-4f9d-876e-bfab74d40685",
              "parentUUID": "141bf414-407e-4a73-b165-41bd9c6207ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PS007 - Posts Comments Schema Test",
              "fullTitle": "Posts Testing Schemas PS007 - Posts Comments Schema Test",
              "timedOut": false,
              "duration": 575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.get('/posts/1/comments')\nexpect(res.body).to.be.jsonSchema(postsSchemas.postCommentsSchema)",
              "err": {},
              "uuid": "7581ddd4-cf63-4e9c-a685-711ee115d436",
              "parentUUID": "141bf414-407e-4a73-b165-41bd9c6207ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PS008 - Posts Update Post Schema Test",
              "fullTitle": "Posts Testing Schemas PS008 - Posts Update Post Schema Test",
              "timedOut": false,
              "duration": 585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedPost = {\n    title: 'I think I should shift to the moon',\n}\nconst res = await request.put('/posts/1').send(updatedPost)\nexpect(res.body).to.be.jsonSchema(postsSchemas.postSchema)",
              "err": {},
              "uuid": "50dcb746-f795-45ef-b27b-27326b208b2e",
              "parentUUID": "141bf414-407e-4a73-b165-41bd9c6207ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PS009 - Posts Delete Post Schema Test",
              "fullTitle": "Posts Testing Schemas PS009 - Posts Delete Post Schema Test",
              "timedOut": false,
              "duration": 571,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request.delete('/posts/1')\nexpect(res.body).to.be.jsonSchema(postsSchemas.postDeleteSchema)",
              "err": {},
              "uuid": "8320559e-1ea3-4e90-9a00-39097c8013dc",
              "parentUUID": "141bf414-407e-4a73-b165-41bd9c6207ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46ed355b-72ee-4813-8e00-54d14d214e02",
            "b0655981-944a-4b68-92c4-0fb344d1c150",
            "f22d4fe9-43a1-4850-b764-c57f098c9229",
            "9db31260-e1f4-4564-96e2-40471545cdf5",
            "8547d1aa-d8b8-4075-bc49-e5096f8216d0",
            "f364557f-0144-4f9d-876e-bfab74d40685",
            "7581ddd4-cf63-4e9c-a685-711ee115d436",
            "50dcb746-f795-45ef-b27b-27326b208b2e",
            "8320559e-1ea3-4e90-9a00-39097c8013dc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]_[status]_report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reportsHistory",
        "reportFilename": "[datetime]_[status]_report",
        "endpoint": "https://demo.reportportal.io/api/v1",
        "apiKey": "zainic-api-example_HPTBGFL6RF2RDFIKshBkCIDHD2BoWjHVaBfQ9i18B4Dx0Eeidgh8IhEqilQ4ptRY",
        "project": "zainic_personal",
        "launch": "API Example Testing"
      },
      "version": "6.2.0"
    }
  }
}